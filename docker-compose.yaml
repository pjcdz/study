services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
      # Exclude heavy directories from sync to speed up
      - /app/public
    environment:
      # Disable file watching polling for better performance
      - CHOKIDAR_USEPOLLING=false
      - NODE_ENV=development
      - WATCHPACK_POLLING=false
      - NEXT_TELEMETRY_DISABLED=1
      # Use the correct variable name that next.config.js expects
      - NEXT_PUBLIC_API_URL=http://backend:4000
      # Demo mode with fixed content for development/testing
      - USE_DEMO_CONTENT=false
      # Disable Sentry in development to speed up compilation
      - SENTRY_DSN=""
      - SENTRY_ORG=pjcdz
      - SENTRY_PROJECT=studyapp
      - CI=false
      - NEXT_DISABLE_SENTRY=true
      # Optimize Next.js for development
      - NEXT_PRIVATE_STANDALONE=true
      - NEXT_PRIVATE_LOCAL_WEBPACK=true
    depends_on:
      - backend
    networks:
      - study-network
    # Add resource limits to prevent memory issues
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    ports:
      - "4000:4000"
    volumes:
      - ./backend:/app
      - ./backend/uploads:/app/uploads
    environment:
      - NODE_ENV=development
    networks:
      - study-network
    command: npm run dev
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

networks:
  study-network:
    driver: bridge
