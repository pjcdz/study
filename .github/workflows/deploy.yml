name: Build and Deploy StudyApp

on:
  push:
    branches:
      - main
  # Enable manual triggering
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME_FRONTEND: ${{ github.repository_owner }}/study_frontend
  IMAGE_NAME_BACKEND: ${{ github.repository_owner }}/study_backend
  REMOTE_DEPLOY_PATH: /home/deploy/study

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Frontend image
        id: meta-frontend
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_FRONTEND }}
          tags: |
            type=sha,format=short
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}

      - name: Build and push Frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ steps.meta-frontend.outputs.tags }}
          labels: ${{ steps.meta-frontend.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
      - name: Extract metadata (tags, labels) for Backend image
        id: meta-backend
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_BACKEND }}
          tags: |
            type=sha,format=short
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}

      - name: Build and push Backend image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ${{ steps.meta-backend.outputs.tags }}
          labels: ${{ steps.meta-backend.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy Stack via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.DEPLOY_SSH_PRIVATE_KEY }}
          script: |
            set -e

            # --- Git Synchronization ---
            cd ${{ env.REMOTE_DEPLOY_PATH }} # Go to the deployment directory

            echo "ðŸ“¥ Pulling and resetting Git repository..."
            git fetch origin                 # Get the latest from remote
            git reset --hard origin/main     # Force the local state to match origin/main
            git clean -fd                    # Clean untracked files
            echo "   Git repository synchronized."
            # --- End of Git Synchronization ---

            STACK_FILE="${{ env.REMOTE_DEPLOY_PATH }}/docker-stack.yml"

            echo "ðŸš€ Deploying Docker Stack..."
            GITHUB_USERNAME="${{ github.repository_owner }}" \
            TAG="latest" \
            docker stack deploy --with-registry-auth -c ${STACK_FILE} study

            echo "âœ… Deployment completed."